<?php
/**
 * Formicula - the contact mailer for Zikula
 * -----------------------------------------
 *
 * @copyright  (c) Formicula Development Team
 * @link       http://code.zikula.org/formicula 
 * @version    $Id$
 * @license    GNU/GPL - http://www.gnu.org/copyleft/gpl.html
 * @author     Frank Schummertz <frank@zikula.org>
 * @package    Third_Party_Components
 * @subpackage formicula
 */
 
/**
 * main
 * main entry point for configuration
 *
 *@param none
 *@returns pnRender output
 */
function Formicula_admin_main()
{
    return pnModFunc('formicula', 'admin', 'view');
}

/**
 * edit
 * editing existing and adding new contacts
 *
 *@param cid int contact id, -1 for new contacts
 *@returns pnRender output
 */
function Formicula_admin_edit()
{
    if (!SecurityUtil::checkPermission('formicula::', '::', ACCESS_ADD)) {
        return LogUtil::registerPermissionError(pnConfigGetVar('entrypoint', 'index.php'));
    }

    // check necessary environment
    formicula_envcheck();

    Loader::requireOnce('modules/formicula/pnincludes/for_admin_edithandler.class.php');

    // Create output object
    $pnf = FormUtil::newpnForm('formicula');

    // Return the output that has been generated by this function
    return $pnf->pnFormExecute('formicula_admin_edit.html', new Formicula_admin_edithandler());
}

/**
 * delete
 * deletes an existing contact from the database
 * When called for the first time its produces an "Are you sure?" page. If the admin
 * clicks on OK, confirmation is set and the function deletes the entry
 *
 *@param cid int contact id
 *@param confirmation string any value
 *@returns pnRender output on error or forwards to view()
 */
function formicula_admin_delete()
{
    if (!SecurityUtil::checkPermission('formicula::', '::', ACCESS_DELETE)) {
        return LogUtil::registerPermissionError(pnConfigGetVar('entrypoint', 'index.php'));
    }

    // check necessary environment
    formicula_envcheck();

    $cid          = (int)FormUtil::getPassedValue('cid', -1, 'GETPOST');
    $confirmation =      FormUtil::getPassedValue('confirmation', '', 'GETPOST');

    $contact = pnModAPIFunc('formicula',
                            'admin',
                            'getContact',
                            array('cid' => $cid));

    if ($contact == false) {
        return LogUtil::registerError(_FOR_NOSUCHCONTACT, null, pnModURL('formicula', 'admin', 'main'));
    }

    // Check for confirmation.
    if (empty($confirmation)) {
        $pnr = pnRender::getInstance('formicula', false);
        $pnr->assign('contact', $contact);
        return $pnr->fetch('formicula_admin_delete.html');
    }

    if (!SecurityUtil::confirmAuthKey()) {
        return LogUtil::registerAuthidError(pnModURL('formicula', 'admin', 'main'));
    }

    if (pnModAPIFunc('formicula',
                     'admin',
                     'deleteContact',
                     array('cid' => $cid))) {
        // Success
        LogUtil::registerStatus(_FOR_CONTACTDELETED);
    }

    return pnRedirect(pnModURL('formicula', 'admin', 'view'));
}

/**
 * view
 * show list of contacts
 *
 *@param none
 *@returns pnRender output
 */
function formicula_admin_view()
{
    if (!SecurityUtil::checkPermission('formicula::', '::', ACCESS_ADMIN)) {
        return LogUtil::registerPermissionError(pnConfigGetVar('entrypoint', 'index.php'));
    }

    // check necessary environment
    formicula_envcheck();
    
    $pnr = pnRender::getInstance('formicula', false);

    // read all items
    $allcontacts = pnModAPIFunc('formicula',
                                'admin',
                                'readContacts');
    // only use those where we have the necessary rights for
    $allowedcontacts = array();
    foreach ($allcontacts as $contact) {
        $cid = $contact['cid'];
        if (SecurityUtil::checkPermission('formicula::', ":$cid:", ACCESS_EDIT)) {
            $allowedcontact = array('cid'        => $contact['cid'],
                                    'name'       => $contact['name'],
                                    'email'      => $contact['email'],
                                    'public'     => $contact['public'],
                                    'sname'      => $contact['sname'],
                                    'semail'     => $contact['semail'],
                                    'ssubject'   => $contact['ssubject'],
                                    'acc_edit'   => true,
                                    'acc_delete' => SecurityUtil::checkPermission('formicula::', ":$cid:", ACCESS_DELETE));
            array_push($allowedcontacts, $allowedcontact);
        }
    }
    $pnr->assign('contacts', $allowedcontacts);
    return $pnr->fetch('formicula_admin_view.html');
}

/**
 * modifyconfig
 * main entry point for configuration of module behaviour
 *
 *@param none
 *@returns pnRender output
 */
function formicula_admin_modifyconfig()
{
    if (!SecurityUtil::checkPermission('formicula::', '::', ACCESS_ADMIN)) {
        return LogUtil::registerPermissionError(pnConfigGetVar('entrypoint', 'index.php'));
    }

    // check necessary environment
    formicula_envcheck();

    Loader::requireOnce('modules/formicula/pnincludes/for_admin_modifyconfighandler.class.php');

    // Create output object
    $pnf = FormUtil::newpnForm('formicula');

    // Return the output that has been generated by this function
    return $pnf->pnFormExecute('formicula_admin_modifyconfig.html', new Formicula_admin_modifyconfighandler());
}

/**
 * envcheck
 * check some environment and set error messages
 *
 */
function formicula_envcheck()
{
    if(!pnModAvailable('Mailer')) {
        LogUtil::registerError(_FOR_NOMAILERMODULE);
    }

    if(pnModGetVar('formicula', 'spamcheck') <> 0) {
        $freetype = function_exists('imagettfbbox');
        if(!$freetype || ( !(imagetypes() && IMG_PNG)
                      && !(imagetypes() && IMG_JPG)
                      && !(imagetypes() && IMG_GIF)) ) {
            LogUtil::registerStatus(_FOR_NOIMAGEFUNCTION);
            pnModSetVar('formicula', 'spamcheck', 0);
        }
        
        $cachedir = pnConfigGetVar('temp') . '/formicula_cache';
        if(!file_exists($cachedir) || !is_writable($cachedir)) {
            LogUtil::registerStatus(_FOR_CACHEDIRPROBLEM);
            pnModSetVar('formicula', 'spamcheck', 0);
        }
        if(!file_exists($cachedir.'/.htaccess')) {
            LogUtil::registerStatus(_FOR_HTACCESSPROBLEM);
            pnModSetVar('formicula', 'spamcheck', 0);
        }
    }
    return true;
}

/**
 * clear image cache
 *
 */
function formicula_admin_clearcache()
{
    if (!SecurityUtil::checkPermission('formicula::', '::', ACCESS_ADMIN)) {
        return LogUtil::registerPermissionError(pnConfigGetVar('entrypoint', 'index.php'));
    }

    // clear the image cache
    $temp = pnConfigGetVar('temp');
    if(StringUtil::right($temp, 1) <> '/') {
        $temp .= '/';
    }
    $path = $temp . 'formicula_cache/';
    
    $dh = opendir($path);

    while(($file = readdir($dh)) !== false) {
        $osfile = DataUtil::formatForOS($file);
        if ($file != '.' && $file != '..' && $file != '.htaccess' && $file != 'index.htm' && $file != 'index.html') {
            unlink("${path}/${osfile}");
        }
    }

    closedir($dh);
    
    LogUtil::registerStatus(_FOR_CLEAREDIMAGECACHE);
    return pnRedirect(pnModURL('formicula', 'admin', 'main'));
}
